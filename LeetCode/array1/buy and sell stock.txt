class Solution {
    public int maxProfit(int[] prices) {
        int profit = 0;
        for(int i=0;i<prices.length;i++){
            for(int j=i;j<prices.length;j++){
                if(prices[j]-prices[i] > profit){
                    profit = prices[j]-prices[i];
                }
            }
        }
        return profit;
    }
}
O(n^2)=> each n we gonna do n-1,n-2 upto n-n which adds upto give O(n). so O(n^2). so each time n^2 for 5 times its 5n^2 we can neglect 5
so n^2.
class Solution {
    public int maxProfit(int[] prices) {
        int profit = 0,minBuy = prices[0];
        for(int i=0;i<prices.length;i++){
            if(prices[i] < minBuy){
                minBuy = prices[i];
            }
            if(prices[i]-minBuy > profit){
                profit =prices[i]-minBuy;
            }
        }
        return profit;
    }
}
O(n) =>  we traverse only once

DP.