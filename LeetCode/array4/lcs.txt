//optimal solution

class Solution {
    public int longestConsecutive(int[] nums) {
        Set<Integer> set = new HashSet<>();
        for(int i=0;i<nums.length;i++){
            set.add(nums[i]);
        }
        int max=0;
        for(int i=0;i<nums.length;i++){
            if(set.contains(nums[i]-1)){
                continue;
            }
            else{
                int count=1,j=1;
                while(set.contains(nums[i]+j)){
                    count++;
                    j++;
                }
                max = Math.max(count,max);
            }
        }
        return max;
    }
}

O(N)+O(N)+O(N) ->O(3N) hahset insertion + another itertaion for doing the process+ another itertaion for checking the max length
O(N) -> space