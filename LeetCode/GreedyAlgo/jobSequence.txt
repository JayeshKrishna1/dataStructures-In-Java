class Solution
{
    //Function to find the maximum profit and the number of jobs done.
    int[] JobScheduling(Job arr[], int n)
    {
        // Your code here
        Arrays.sort(arr,(a,b)->b.profit -a.profit);
        int maxJobTime =0;
        for(int i=0;i<n;i++){
            if(maxJobTime < arr[i].deadline){
                maxJobTime = arr[i].deadline;
            }
        }
        int[] deadline = new int[maxJobTime+1];
        for(int i=1;i<=maxJobTime;i++){
            deadline[i]=-1;
        }
        int maxProfit=0,countJobs=0;
        for(int i=0;i<n;i++){
            for(int j=arr[i].deadline;j>0;j--){
                if(deadline[j] == -1){
                    deadline[j]=arr[i].id;
                    maxProfit+=arr[i].profit;
                    countJobs++;
                    break;
                }
            }
        }
        int[] res = new int[2];
        res[0]=countJobs;
        res[1]=maxProfit;
        return res;
    }
}


 class Job {
     int id, profit, deadline;
     Job(int x, int y, int z){
         this.id = x;
         this.deadline = y;
         this.profit = z; 
     }
 }
